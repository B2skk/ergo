{"version":3,"sources":["assets/images/logotype_white.svg","constants.js","components/elements/common/MenuList/index.js","components/layout/index.js","components/elements/common/InfoCard/index.js","components/elements/SynchCard/index.js","api/api.js","components/pages/Dashboard/index.js","App.js","index.js"],"names":["module","exports","routerList","dashboard","href","icon","faChartLine","title","swaggerInterface","constants","faBook","isOutsideLink","explorer","faWpexplorer","website","faGlobe","withRouter","pathname","location","className","Object","values","map","index","key","rel","target","clsx","active","to","Layout","Navbar","expand","Brand","src","logo","alt","this","props","children","Component","InfoCard","color","SynchCard","renderActiveSynchronization","faSync","spin","renderCompleteSynchronization","faCheck","renderSynchronizationState","state","complete","getSynchronizationState","fullHeight","headersHeight","nextProps","nextState","nodeInfo","currentSynchState","NetworkError","status","message","data","statusText","name","prototype","create","Error","nodeApi","axios","baseURL","timeout","headers","interceptors","response","use","Promise","resolve","error","reject","Dashboard","getNodeCurrentState","get","setCurrentState","a","setState","setTimer","timerId","setInterval","clearInterval","peersCount","bestHeaderId","launchTime","appVersion","isMining","format","Date","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7c74e33.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logotype_white.4dcfd639.svg\";","export default {\n  nodeInterface: 'http://0.0.0.0:9053/',\n  swaggerInterface: 'http://0.0.0.0:9053/swagger',\n  website: 'https://ergoplatform.org',\n  explorer: 'https://explorer.ergoplatform.com',\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faChartLine,\n  faExchangeAlt,\n  faGlobe,\n  faBook,\n} from '@fortawesome/free-solid-svg-icons'\nimport clsx from 'clsx'\nimport { faWpexplorer } from '@fortawesome/free-brands-svg-icons'\nimport { withRouter, Link } from 'react-router-dom'\nimport constants from '../../../../constants'\n\nconst routerList = {\n  dashboard: {\n    href: '/',\n    icon: <FontAwesomeIcon icon={faChartLine}></FontAwesomeIcon>,\n    title: 'Dashboard',\n  },\n  // wallet: {\n  //   href: '/wallet',\n  //   icon: <FontAwesomeIcon icon={faExchangeAlt}></FontAwesomeIcon>,\n  //   title: 'Wallet',\n  // },\n  swaggerInterface: {\n    href: constants.swaggerInterface,\n    icon: <FontAwesomeIcon icon={faBook}></FontAwesomeIcon>,\n    title: 'Swagger',\n    isOutsideLink: true,\n  },\n  explorer: {\n    href: constants.explorer,\n    icon: <FontAwesomeIcon icon={faWpexplorer}></FontAwesomeIcon>,\n    title: 'Explorer',\n    isOutsideLink: true,\n  },\n  website: {\n    href: constants.website,\n    icon: <FontAwesomeIcon icon={faGlobe}></FontAwesomeIcon>,\n    title: 'Website',\n    isOutsideLink: true,\n  },\n}\n\nconst MenuList = ({ location: { pathname } }) => {\n  return (\n    <div className=\"pt-4\">\n      <p className=\"h5 pl-3\">Menu</p>\n      <hr className=\"mb-0\" />\n      <div className=\"list-group list-group-flush\">\n        {Object.values(routerList).map(\n          ({ href, icon, title, isOutsideLink }, index) =>\n            isOutsideLink ? (\n              <a\n                key={title}\n                className=\"list-group-item list-group-item-action\"\n                href={href}\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n              >\n                {icon} {title}\n              </a>\n            ) : (\n              <Link\n                key={title}\n                className={clsx('list-group-item list-group-item-action', {\n                  'list-group-item-dark': href === pathname,\n                  active: href === pathname,\n                  'border-top-0': index === 0,\n                })}\n                to={href}\n              >\n                {icon} {title}\n              </Link>\n            ),\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(MenuList)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport MenuList from '../elements/common/MenuList'\nimport { Navbar } from 'react-bootstrap'\nimport logo from '../../assets/images/logotype_white.svg'\nimport './index.scss'\n\nclass Layout extends Component {\n  render() {\n    return (\n      <div>\n        <Navbar className=\"navbar-background\" expand=\"lg\">\n          <Navbar.Brand className=\"navbar-brand\">\n            <a href=\"/\">\n              <img src={logo} alt=\"logotype\" className=\"logotype\" />\n            </a>\n          </Navbar.Brand>\n        </Navbar>\n        <div className=\"sidebar\">\n          <MenuList></MenuList>\n        </div>\n        <main className=\"main-container\">\n          <div className=\"content\">{this.props.children}</div>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Layout)\n","import React from 'react'\nimport clsx from 'clsx'\nimport './index.scss'\n\nconst InfoCard = ({ color, children, className }) => {\n  return (\n    <div\n      className={clsx(\n        {\n          'info-card': true,\n          'info-card--green': color === 'green',\n          'info-card--orange': color === 'orange',\n        },\n        className,\n      )}\n    >\n      {children}\n    </div>\n  )\n}\n\nexport default InfoCard\n","import React, { Component } from 'react'\nimport InfoCard from '../common/InfoCard'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSync, faCheck } from '@fortawesome/free-solid-svg-icons'\nimport './index.scss'\n\nexport default class SynchCard extends Component {\n  renderActiveSynchronization = () => (\n    <>\n      <p className=\"info-card__title\">Current node state</p>\n      <p className=\"info-card__label text-warning\">\n        <FontAwesomeIcon icon={faSync} spin></FontAwesomeIcon> Active\n        synchronization\n      </p>\n    </>\n  )\n\n  renderCompleteSynchronization = () => (\n    <>\n      <p className=\"info-card__title\">Current node state</p>\n      <p className=\"info-card__label text-success\">\n        <FontAwesomeIcon icon={faCheck}></FontAwesomeIcon> Node is synced\n      </p>\n    </>\n  )\n\n  renderSynchronizationState = state =>\n    ({\n      active: this.renderActiveSynchronization,\n      complete: this.renderCompleteSynchronization,\n    }[state])\n\n  getSynchronizationState = ({ fullHeight, headersHeight }) => {\n    if (fullHeight === headersHeight) {\n      return 'complete'\n    }\n\n    return 'active'\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (\n      this.getSynchronizationState(nextProps) !==\n      this.getSynchronizationState(this.props.nodeInfo)\n    ) {\n      return true\n    }\n\n    return false\n  }\n\n  render() {\n    const currentSynchState = this.getSynchronizationState(this.props.nodeInfo)\n    return (\n      <InfoCard className={this.props.className}>\n        {this.renderSynchronizationState(currentSynchState)()}\n      </InfoCard>\n    )\n  }\n}\n","import axios from 'axios'\nimport constants from '../constants'\n\nfunction NetworkError({ status, message, data, statusText }) {\n  this.name = 'NetworkError'\n  this.message = message || statusText\n  this.status = status\n  this.data = data\n}\n\nNetworkError.prototype = Object.create(Error.prototype)\n\nexport const nodeApi = axios.create({\n  baseURL: constants.nodeInterface,\n  timeout: 1000 * 5,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n})\n\nnodeApi.interceptors.response.use(\n  response => Promise.resolve(response),\n  error => Promise.reject(new NetworkError(error.response || {})),\n)\n","import React, { Fragment, Component } from 'react'\nimport SynchCard from '../../elements/SynchCard'\nimport InfoCard from '../../elements/common/InfoCard'\nimport { format } from 'date-fns'\nimport { nodeApi } from '../../../api/api'\nexport default class Dashboard extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      nodeInfo: null,\n    }\n  }\n\n  componentDidMount() {\n    this.setCurrentState()\n    this.setTimer()\n  }\n\n  getNodeCurrentState = () => nodeApi.get('/info')\n\n  setCurrentState = async () => {\n    const { data: nodeInfo } = await this.getNodeCurrentState()\n    this.setState({ nodeInfo })\n  }\n\n  setTimer = () => {\n    const timerId = setInterval(this.setCurrentState, 5000)\n    this.setState({ timerId })\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timerId)\n  }\n\n  render() {\n    if (this.state.nodeInfo === null) {\n      return <></>\n    }\n\n    const {\n      peersCount,\n      headersHeight,\n      bestHeaderId,\n      launchTime,\n      appVersion,\n      isMining,\n    } = this.state.nodeInfo\n\n    return (\n      <Fragment>\n        <div className=\"container-fluid\">\n          <div className=\"row mb-3\">\n            <div className=\"col-3 p-0 border-right\">\n              <InfoCard className=\"card rounded-0 shadow-none border-bottom\">\n                <p className=\"info-card__title\">Node version</p>\n                <p className=\"info-card__label\">{appVersion}</p>\n              </InfoCard>\n            </div>\n            <div className=\"col-3 p-0 border-right\">\n              <SynchCard\n                nodeInfo={this.state.nodeInfo}\n                className=\"border-bottom\"\n              ></SynchCard>\n            </div>\n            <div className=\"col-3 p-0 border-right\">\n              <InfoCard className=\"rounded-0 shadow-none border-bottom\">\n                <p className=\"info-card__title\">Current height</p>\n                <p className=\"info-card__label\">{headersHeight}</p>\n              </InfoCard>\n            </div>\n            <div className=\"col-3 p-0\">\n              <InfoCard className=\"rounded-0 shadow-none border-bottom\">\n                <p className=\"info-card__title\">Best block id</p>\n                <p className=\"info-card__label\">{bestHeaderId}</p>\n              </InfoCard>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-3 p-0 border-right\">\n              <InfoCard className=\"rounded-0 shadow-none border-bottom\">\n                <p className=\"info-card__title\">Node started at</p>\n                <p className=\"info-card__label\">\n                  {format(new Date(launchTime), 'MM-dd-yyyy HH:mm:ss')}\n                </p>\n              </InfoCard>\n            </div>\n            <div className=\"col-3 p-0 border-right\">\n              <InfoCard className=\"rounded-0 shadow-none border-bottom\">\n                <p className=\"info-card__title\">Mining enabled</p>\n                <p className=\"info-card__label\">\n                  {isMining ? 'true' : 'false'}\n                </p>\n              </InfoCard>\n            </div>\n            <div className=\"col-3 p-0 border-right\">\n              <InfoCard className=\"rounded-0 shadow-none border-bottom\">\n                <p className=\"info-card__title\">Peers connected</p>\n                <p className=\"info-card__label\">{peersCount}</p>\n              </InfoCard>\n            </div>\n          </div>\n        </div>\n      </Fragment>\n    )\n  }\n}\n","import React from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Layout from './components/layout'\nimport Dashboard from './components/pages/Dashboard'\n\nfunction App() {\n  return (\n    <Router>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n        </Switch>\n      </Layout>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './assets/styles/index.scss'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}